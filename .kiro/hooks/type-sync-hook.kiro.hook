{
  "enabled": true,
  "name": "型別定義同步 Hook",
  "description": "當資料模型變更時自動同步相關型別定義，檢查 API 路由、元件 props、store 狀態等是否需要同步更新",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "src/types/**/*.ts",
      "src/lib/validations/**/*.ts"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "🔄 **型別定義同步分析**\n\n請執行全面的型別同步檢查並提供詳細報告：\n\n## 1. 變更影響分析\n- 🔍 識別修改的型別定義和介面\n- 📊 分析變更的影響範圍和嚴重程度\n- ⚠️ 檢查是否有破壞性變更\n- 🔄 識別需要同步更新的相關型別\n\n## 2. 相依檔案檢查\n請檢查以下檔案是否需要更新：\n- 🛣️ **Server Actions**: `src/app/actions/**/*.ts`\n- ⚛️ **React 元件**: `src/components/**/*.{ts,tsx}`\n- 🏪 **Store 狀態**: `src/store/**/*.ts`\n- 📝 **表單驗證**: `src/lib/validations/**/*.ts`\n- 🔌 **API 服務**: `src/lib/services/**/*.ts`\n- 🎣 **Custom Hooks**: `src/hooks/**/*.ts`\n- 📊 **TanStack Query**: `src/lib/queries/**/*.ts`\n\n## 3. 型別安全性驗證\n- ✅ 檢查 TypeScript 編譯錯誤\n- 🔒 驗證型別的嚴格性和完整性\n- 🔄 檢查泛型型別的正確使用\n- 📋 驗證聯合型別和交集型別\n\n## 4. 向後相容性檢查\n- 📅 檢查是否影響現有 API 契約\n- 🔄 分析遷移路徑和策略\n- ⚠️ 識別潛在的執行時錯誤\n\n## 5. 自動修復建議\n請提供：\n- 🔧 **具體修復程式碼**\n- 📝 **型別定義範例**\n- 🎯 **最佳實踐建議**\n- 📋 **檢查清單**\n- ⚡ **自動化腳本建議**\n\n## 6. 測試建議\n- 🧪 建議需要更新的測試檔案\n- 📊 型別測試的實現建議\n- 🔄 整合測試的更新需求\n\n**請提供結構化的分析報告，包含優先級排序的修復建議和具體的實作範例。**"
  }
}